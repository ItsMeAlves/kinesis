<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Logo" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>